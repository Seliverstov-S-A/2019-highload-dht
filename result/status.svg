<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="421"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="421"> </text>
<g id="frames">
<g>
<title>all (1,698 samples, 100.00%)</title><rect x="10.0" y="387.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="398.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=38659] (1 samples, 0.06%)</title><rect x="10.0" y="371.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.06%)</title><rect x="10.0" y="355.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (1 samples, 0.06%)</title><rect x="10.0" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.register (1 samples, 0.06%)</title><rect x="10.0" y="323.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.enable (1 samples, 0.06%)</title><rect x="10.0" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="10.0" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="10.0" y="275.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>write (1 samples, 0.06%)</title><rect x="10.0" y="259.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=24323] (419 samples, 24.68%)</title><rect x="10.7" y="371.0" width="291.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.7" y="382.0">[NIO Selector #0 tid=24323]</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.12%)</title><rect x="10.7" y="355.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="13.7" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (417 samples, 24.56%)</title><rect x="12.1" y="355.0" width="289.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.1" y="366.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (257 samples, 15.14%)</title><rect x="12.1" y="339.0" width="178.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.1" y="350.0">one/nio/net/JavaSelecto..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (3 samples, 0.18%)</title><rect x="12.1" y="323.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.12%)</title><rect x="12.8" y="307.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.8" y="318.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.12%)</title><rect x="12.8" y="291.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.8" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.12%)</title><rect x="12.8" y="275.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.8" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="12.8" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.8" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="12.8" y="243.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.06%)</title><rect x="14.2" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.2" y="334.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.12%)</title><rect x="14.9" y="323.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (251 samples, 14.78%)</title><rect x="16.3" y="323.0" width="174.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.3" y="334.0">sun/nio/ch/SelectorImp..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (251 samples, 14.78%)</title><rect x="16.3" y="307.0" width="174.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.3" y="318.0">sun/nio/ch/SelectorImp..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (250 samples, 14.72%)</title><rect x="16.3" y="291.0" width="173.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.3" y="302.0">sun/nio/ch/KQueueSelec..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (246 samples, 14.49%)</title><rect x="16.3" y="275.0" width="170.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.3" y="286.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>kevent (236 samples, 13.90%)</title><rect x="23.2" y="259.0" width="164.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="26.2" y="270.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.18%)</title><rect x="187.2" y="275.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.2" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="187.9" y="259.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.9" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="187.9" y="243.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.9" y="254.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (1 samples, 0.06%)</title><rect x="187.9" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.9" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.06%)</title><rect x="188.6" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.6" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.06%)</title><rect x="188.6" y="243.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.6" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.06%)</title><rect x="188.6" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.6" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="188.6" y="211.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="191.6" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.06%)</title><rect x="189.3" y="275.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.06%)</title><rect x="189.3" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.06%)</title><rect x="190.0" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (160 samples, 9.42%)</title><rect x="190.7" y="339.0" width="111.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.7" y="350.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (155 samples, 9.13%)</title><rect x="192.8" y="323.0" width="107.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.8" y="334.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (120 samples, 7.07%)</title><rect x="192.8" y="307.0" width="83.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.8" y="318.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (111 samples, 6.54%)</title><rect x="192.8" y="291.0" width="77.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.8" y="302.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (111 samples, 6.54%)</title><rect x="192.8" y="275.0" width="77.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.8" y="286.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (110 samples, 6.48%)</title><rect x="192.8" y="259.0" width="76.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.8" y="270.0">RequestH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (107 samples, 6.30%)</title><rect x="192.8" y="243.0" width="74.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.8" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (104 samples, 6.12%)</title><rect x="192.8" y="227.0" width="72.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.8" y="238.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (14 samples, 0.82%)</title><rect x="192.8" y="211.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.8" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (12 samples, 0.71%)</title><rect x="194.2" y="195.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.2" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.24%)</title><rect x="194.2" y="179.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.2" y="190.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="196.2" y="163.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.2" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.47%)</title><rect x="196.9" y="179.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.9" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.47%)</title><rect x="196.9" y="163.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="201.1" y="147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="201.1" y="131.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="201.8" y="147.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="201.8" y="131.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.8" y="142.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (90 samples, 5.30%)</title><rect x="202.5" y="211.0" width="62.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.5" y="222.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (90 samples, 5.30%)</title><rect x="202.5" y="195.0" width="62.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.5" y="206.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (89 samples, 5.24%)</title><rect x="202.5" y="179.0" width="61.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.5" y="190.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (89 samples, 5.24%)</title><rect x="202.5" y="163.0" width="61.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.5" y="174.0">one/ni..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (89 samples, 5.24%)</title><rect x="202.5" y="147.0" width="61.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.5" y="158.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (89 samples, 5.24%)</title><rect x="202.5" y="131.0" width="61.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.5" y="142.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (87 samples, 5.12%)</title><rect x="203.9" y="115.0" width="60.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.9" y="126.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (85 samples, 5.01%)</title><rect x="203.9" y="99.0" width="59.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.9" y="110.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (85 samples, 5.01%)</title><rect x="203.9" y="83.0" width="59.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.9" y="94.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (85 samples, 5.01%)</title><rect x="203.9" y="67.0" width="59.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.9" y="78.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.06%)</title><rect x="208.8" y="51.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="211.8" y="62.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.06%)</title><rect x="208.8" y="35.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="211.8" y="46.0"></text>
</g>
<g>
<title>write (77 samples, 4.53%)</title><rect x="209.4" y="51.0" width="53.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="212.4" y="62.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.12%)</title><rect x="263.0" y="99.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.0" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="263.0" y="83.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.0" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="263.7" y="83.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.7" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1 samples, 0.06%)</title><rect x="263.7" y="67.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.7" y="78.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="264.3" y="179.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="267.3" y="190.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="264.3" y="163.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="267.3" y="174.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.06%)</title><rect x="264.3" y="147.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="267.3" y="158.0"></text>
</g>
<g>
<title>_res (1 samples, 0.06%)</title><rect x="264.3" y="131.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="267.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.18%)</title><rect x="265.0" y="227.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.18%)</title><rect x="265.0" y="211.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.18%)</title><rect x="265.0" y="195.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="268.0" y="206.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="265.7" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.7" y="190.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="265.7" y="163.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.7" y="174.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="266.4" y="179.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.4" y="190.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="266.4" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.4" y="174.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.06%)</title><rect x="266.4" y="147.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.status (3 samples, 0.18%)</title><rect x="267.1" y="243.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (3 samples, 0.18%)</title><rect x="267.1" y="227.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.18%)</title><rect x="267.1" y="211.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="268.5" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.handleDefault (1 samples, 0.06%)</title><rect x="269.2" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.35%)</title><rect x="269.9" y="291.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.12%)</title><rect x="269.9" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.9" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.24%)</title><rect x="271.3" y="275.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.24%)</title><rect x="271.3" y="259.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.18%)</title><rect x="274.1" y="291.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.1" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.18%)</title><rect x="274.1" y="275.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.1" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (35 samples, 2.06%)</title><rect x="276.2" y="307.0" width="24.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.2" y="318.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (35 samples, 2.06%)</title><rect x="276.2" y="291.0" width="24.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.2" y="302.0">o..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (35 samples, 2.06%)</title><rect x="276.2" y="275.0" width="24.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.2" y="286.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="276.2" y="259.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="276.2" y="243.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="276.2" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="276.2" y="211.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.06%)</title><rect x="276.2" y="195.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.06%)</title><rect x="276.2" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="276.2" y="163.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.2" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 2.00%)</title><rect x="276.9" y="259.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.9" y="270.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 2.00%)</title><rect x="276.9" y="243.0" width="23.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.9" y="254.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.18%)</title><rect x="277.6" y="227.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.6" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.06%)</title><rect x="277.6" y="211.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.6" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.12%)</title><rect x="278.2" y="211.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.12%)</title><rect x="278.2" y="195.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.12%)</title><rect x="278.2" y="179.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.12%)</title><rect x="278.2" y="163.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.12%)</title><rect x="278.2" y="147.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.2" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (30 samples, 1.77%)</title><rect x="279.6" y="227.0" width="20.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.6" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (29 samples, 1.71%)</title><rect x="280.3" y="211.0" width="20.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="283.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (29 samples, 1.71%)</title><rect x="280.3" y="195.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.3" y="206.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.06%)</title><rect x="281.7" y="179.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="284.7" y="190.0"></text>
</g>
<g>
<title>read (26 samples, 1.53%)</title><rect x="282.4" y="179.0" width="18.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="285.4" y="190.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.12%)</title><rect x="300.5" y="323.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="303.5" y="334.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=39683] (387 samples, 22.79%)</title><rect x="301.9" y="371.0" width="268.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="304.9" y="382.0">[NIO Selector #1 tid=39683]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.06%)</title><rect x="301.9" y="355.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="304.9" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (386 samples, 22.73%)</title><rect x="302.6" y="355.0" width="268.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.6" y="366.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (231 samples, 13.60%)</title><rect x="302.6" y="339.0" width="160.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.6" y="350.0">one/nio/net/JavaSele..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.06%)</title><rect x="302.6" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.06%)</title><rect x="302.6" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.6" y="318.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="302.6" y="291.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.6" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="302.6" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.6" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="302.6" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.6" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="302.6" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (230 samples, 13.55%)</title><rect x="303.3" y="323.0" width="159.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.3" y="334.0">sun/nio/ch/SelectorI..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (230 samples, 13.55%)</title><rect x="303.3" y="307.0" width="159.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.3" y="318.0">sun/nio/ch/SelectorI..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (229 samples, 13.49%)</title><rect x="303.3" y="291.0" width="159.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.3" y="302.0">sun/nio/ch/KQueueSel..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (222 samples, 13.07%)</title><rect x="304.0" y="275.0" width="154.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.0" y="286.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (2 samples, 0.12%)</title><rect x="310.2" y="259.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="313.2" y="270.0"></text>
</g>
<g>
<title>kevent (211 samples, 12.43%)</title><rect x="311.6" y="259.0" width="146.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="314.6" y="270.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (3 samples, 0.18%)</title><rect x="458.2" y="275.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.12%)</title><rect x="458.9" y="259.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.9" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.12%)</title><rect x="458.9" y="243.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.9" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.12%)</title><rect x="458.9" y="227.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.9" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.12%)</title><rect x="458.9" y="211.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.9" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (3 samples, 0.18%)</title><rect x="460.3" y="275.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (3 samples, 0.18%)</title><rect x="460.3" y="259.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.3" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (1 samples, 0.06%)</title><rect x="462.4" y="291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (155 samples, 9.13%)</title><rect x="463.1" y="339.0" width="107.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.1" y="350.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (155 samples, 9.13%)</title><rect x="463.1" y="323.0" width="107.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.1" y="334.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (114 samples, 6.71%)</title><rect x="463.1" y="307.0" width="79.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.1" y="318.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (105 samples, 6.18%)</title><rect x="463.1" y="291.0" width="73.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.1" y="302.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (105 samples, 6.18%)</title><rect x="463.1" y="275.0" width="73.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.1" y="286.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (100 samples, 5.89%)</title><rect x="463.1" y="259.0" width="69.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.1" y="270.0">Request..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (97 samples, 5.71%)</title><rect x="463.1" y="243.0" width="67.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.1" y="254.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (95 samples, 5.59%)</title><rect x="463.1" y="227.0" width="66.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.1" y="238.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.47%)</title><rect x="463.1" y="211.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.1" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.12%)</title><rect x="465.2" y="195.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.2" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.18%)</title><rect x="466.6" y="195.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.18%)</title><rect x="466.6" y="179.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.6" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 5.12%)</title><rect x="468.7" y="211.0" width="60.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.7" y="222.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (87 samples, 5.12%)</title><rect x="468.7" y="195.0" width="60.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.7" y="206.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="470.7" y="179.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="473.7" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (83 samples, 4.89%)</title><rect x="471.4" y="179.0" width="57.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.4" y="190.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (83 samples, 4.89%)</title><rect x="471.4" y="163.0" width="57.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.4" y="174.0">one/ni..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="471.4" y="147.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.4" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (82 samples, 4.83%)</title><rect x="472.1" y="147.0" width="57.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.1" y="158.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (82 samples, 4.83%)</title><rect x="472.1" y="131.0" width="57.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.1" y="142.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (81 samples, 4.77%)</title><rect x="472.8" y="115.0" width="56.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.8" y="126.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (78 samples, 4.59%)</title><rect x="472.8" y="99.0" width="54.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.8" y="110.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (78 samples, 4.59%)</title><rect x="472.8" y="83.0" width="54.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.8" y="94.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (78 samples, 4.59%)</title><rect x="472.8" y="67.0" width="54.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.8" y="78.0">sun/n..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.06%)</title><rect x="472.8" y="51.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="475.8" y="62.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.06%)</title><rect x="472.8" y="35.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="475.8" y="46.0"></text>
</g>
<g>
<title>write (77 samples, 4.53%)</title><rect x="473.5" y="51.0" width="53.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="476.5" y="62.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.18%)</title><rect x="527.0" y="99.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.0" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="527.0" y="83.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.0" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="527.0" y="67.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.0" y="78.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="527.0" y="51.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="530.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.12%)</title><rect x="527.7" y="83.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.7" y="94.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.06%)</title><rect x="528.4" y="67.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.4" y="78.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.06%)</title><rect x="528.4" y="51.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.4" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="528.4" y="35.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.12%)</title><rect x="529.1" y="227.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="529.1" y="211.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.12%)</title><rect x="529.1" y="195.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.1" y="206.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="529.1" y="179.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.1" y="190.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="529.1" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.1" y="174.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.06%)</title><rect x="529.1" y="147.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.1" y="158.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.06%)</title><rect x="529.1" y="131.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.1" y="142.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="529.8" y="179.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.8" y="190.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.06%)</title><rect x="529.8" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.8" y="174.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.06%)</title><rect x="529.8" y="147.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.8" y="158.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.06%)</title><rect x="529.8" y="131.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.8" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="529.8" y="115.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="532.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.status (3 samples, 0.18%)</title><rect x="530.5" y="243.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (3 samples, 0.18%)</title><rect x="530.5" y="227.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="530.5" y="211.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="533.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.06%)</title><rect x="530.5" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.06%)</title><rect x="530.5" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.5" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="530.5" y="163.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.12%)</title><rect x="531.2" y="211.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="534.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="532.6" y="259.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.6" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="532.6" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.6" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="532.6" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.handleDefault (4 samples, 0.24%)</title><rect x="533.3" y="259.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendError (3 samples, 0.18%)</title><rect x="533.3" y="243.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="533.3" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.3" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (2 samples, 0.12%)</title><rect x="534.0" y="227.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.0" y="238.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (2 samples, 0.12%)</title><rect x="534.0" y="211.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.0" y="222.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.unregister (1 samples, 0.06%)</title><rect x="534.0" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.0" y="206.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.disable (1 samples, 0.06%)</title><rect x="534.0" y="179.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.0" y="190.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.06%)</title><rect x="534.0" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.0" y="174.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.06%)</title><rect x="534.0" y="147.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="537.0" y="158.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.close (1 samples, 0.06%)</title><rect x="534.7" y="195.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.7" y="206.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.close (1 samples, 0.06%)</title><rect x="534.7" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.entity (1 samples, 0.06%)</title><rect x="535.4" y="243.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.executeAsync (1 samples, 0.06%)</title><rect x="535.4" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="535.4" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="535.4" y="195.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.18%)</title><rect x="536.1" y="291.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="539.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.06%)</title><rect x="536.1" y="275.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="536.1" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.1" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="536.8" y="275.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.8" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="536.8" y="259.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="537.5" y="243.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.5" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="537.5" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="540.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="537.5" y="211.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.06%)</title><rect x="538.2" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.2" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="538.2" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.2" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="538.2" y="259.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="538.2" y="243.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="538.2" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.24%)</title><rect x="538.8" y="291.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="538.8" y="275.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.8" y="286.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="538.8" y="259.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="539.5" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="540.2" y="275.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.12%)</title><rect x="540.2" y="259.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.12%)</title><rect x="540.2" y="243.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.2" y="254.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="540.2" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.2" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="540.9" y="227.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="541.6" y="291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.6" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="541.6" y="275.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.6" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (41 samples, 2.41%)</title><rect x="542.3" y="307.0" width="28.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.3" y="318.0">on..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (41 samples, 2.41%)</title><rect x="542.3" y="291.0" width="28.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.3" y="302.0">on..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (41 samples, 2.41%)</title><rect x="542.3" y="275.0" width="28.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.3" y="286.0">su..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.12%)</title><rect x="542.3" y="259.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.12%)</title><rect x="542.3" y="243.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.3" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (39 samples, 2.30%)</title><rect x="543.7" y="259.0" width="27.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.7" y="270.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (39 samples, 2.30%)</title><rect x="543.7" y="243.0" width="27.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="546.7" y="254.0">s..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.06%)</title><rect x="543.7" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.06%)</title><rect x="543.7" y="211.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.7" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.06%)</title><rect x="543.7" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="543.7" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.7" y="190.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="543.7" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.7" y="174.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.06%)</title><rect x="543.7" y="147.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="546.7" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (37 samples, 2.18%)</title><rect x="544.4" y="227.0" width="25.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.4" y="238.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (37 samples, 2.18%)</title><rect x="544.4" y="211.0" width="25.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.4" y="222.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (37 samples, 2.18%)</title><rect x="544.4" y="195.0" width="25.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.4" y="206.0">s..</text>
</g>
<g>
<title>read (36 samples, 2.12%)</title><rect x="545.1" y="179.0" width="25.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="548.1" y="190.0">r..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="570.1" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.1" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="570.1" y="211.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.1" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="570.1" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.1" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25091] (250 samples, 14.72%)</title><rect x="570.8" y="371.0" width="173.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="573.8" y="382.0">[NIO Selector #2 tid=2..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.12%)</title><rect x="570.8" y="355.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="573.8" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (248 samples, 14.61%)</title><rect x="572.2" y="355.0" width="172.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.2" y="366.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (182 samples, 10.72%)</title><rect x="572.9" y="339.0" width="126.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.9" y="350.0">one/nio/net/Java..</text>
</g>
<g>
<title>_res (1 samples, 0.06%)</title><rect x="572.9" y="323.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="575.9" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.06%)</title><rect x="573.6" y="323.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.6" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.06%)</title><rect x="573.6" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.6" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.06%)</title><rect x="573.6" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.6" y="302.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.registerPendingSessions (1 samples, 0.06%)</title><rect x="574.3" y="323.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (179 samples, 10.54%)</title><rect x="575.0" y="323.0" width="124.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.0" y="334.0">sun/nio/ch/Sele..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (179 samples, 10.54%)</title><rect x="575.0" y="307.0" width="124.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.0" y="318.0">sun/nio/ch/Sele..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (179 samples, 10.54%)</title><rect x="575.0" y="291.0" width="124.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.0" y="302.0">sun/nio/ch/KQue..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (171 samples, 10.07%)</title><rect x="575.0" y="275.0" width="118.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.0" y="286.0">sun/nio/ch/KQu..</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (1 samples, 0.06%)</title><rect x="579.2" y="259.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="582.2" y="270.0"></text>
</g>
<g>
<title>kevent (164 samples, 9.66%)</title><rect x="579.8" y="259.0" width="114.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="582.8" y="270.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (2 samples, 0.12%)</title><rect x="693.8" y="275.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (2 samples, 0.12%)</title><rect x="695.2" y="275.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.2" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (2 samples, 0.12%)</title><rect x="695.2" y="259.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.2" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.06%)</title><rect x="696.6" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.6" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.06%)</title><rect x="696.6" y="259.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.06%)</title><rect x="696.6" y="243.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.12%)</title><rect x="697.3" y="275.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.3" y="286.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.12%)</title><rect x="697.3" y="259.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.3" y="270.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.12%)</title><rect x="697.3" y="243.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.3" y="254.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.12%)</title><rect x="697.3" y="227.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.3" y="238.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.12%)</title><rect x="697.3" y="211.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.3" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.06%)</title><rect x="698.7" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.7" y="286.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="698.7" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.7" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="698.7" y="243.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.7" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="698.7" y="227.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.7" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="698.7" y="211.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="701.7" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (65 samples, 3.83%)</title><rect x="699.4" y="339.0" width="45.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="702.4" y="350.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (65 samples, 3.83%)</title><rect x="699.4" y="323.0" width="45.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.4" y="334.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (49 samples, 2.89%)</title><rect x="699.4" y="307.0" width="34.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.4" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (42 samples, 2.47%)</title><rect x="700.1" y="291.0" width="29.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.1" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (42 samples, 2.47%)</title><rect x="700.1" y="275.0" width="29.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.1" y="286.0">on..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (41 samples, 2.41%)</title><rect x="700.1" y="259.0" width="28.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.1" y="270.0">Re..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (40 samples, 2.36%)</title><rect x="700.1" y="243.0" width="27.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.1" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (40 samples, 2.36%)</title><rect x="700.1" y="227.0" width="27.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.1" y="238.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="700.1" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.1" y="222.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.06%)</title><rect x="700.1" y="195.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.06%)</title><rect x="700.1" y="179.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="703.1" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 2.30%)</title><rect x="700.8" y="211.0" width="27.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.8" y="222.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 2.30%)</title><rect x="700.8" y="195.0" width="27.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.8" y="206.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (38 samples, 2.24%)</title><rect x="700.8" y="179.0" width="26.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.8" y="190.0">o..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (38 samples, 2.24%)</title><rect x="700.8" y="163.0" width="26.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="703.8" y="174.0">o..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="700.8" y="147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="700.8" y="131.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="700.8" y="115.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="703.8" y="126.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="700.8" y="99.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="703.8" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="700.8" y="83.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="700.8" y="67.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.8" y="78.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="700.8" y="51.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="703.8" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (37 samples, 2.18%)</title><rect x="701.5" y="147.0" width="25.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.5" y="158.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (37 samples, 2.18%)</title><rect x="701.5" y="131.0" width="25.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.5" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (37 samples, 2.18%)</title><rect x="701.5" y="115.0" width="25.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.5" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (35 samples, 2.06%)</title><rect x="701.5" y="99.0" width="24.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.5" y="110.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (35 samples, 2.06%)</title><rect x="701.5" y="83.0" width="24.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.5" y="94.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (35 samples, 2.06%)</title><rect x="701.5" y="67.0" width="24.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.5" y="78.0">s..</text>
</g>
<g>
<title>write (33 samples, 1.94%)</title><rect x="702.9" y="51.0" width="22.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="705.9" y="62.0">w..</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.12%)</title><rect x="725.8" y="99.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="728.8" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="725.8" y="83.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.06%)</title><rect x="726.5" y="83.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="729.5" y="94.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="727.2" y="179.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="730.2" y="190.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="727.2" y="163.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="730.2" y="174.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.06%)</title><rect x="727.2" y="147.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="730.2" y="158.0"></text>
</g>
<g>
<title>_res (1 samples, 0.06%)</title><rect x="727.2" y="131.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="730.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.status (1 samples, 0.06%)</title><rect x="727.9" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.06%)</title><rect x="727.9" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="727.9" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.9" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.06%)</title><rect x="727.9" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.handleDefault (1 samples, 0.06%)</title><rect x="728.6" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.entity (1 samples, 0.06%)</title><rect x="728.6" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.executeAsync (1 samples, 0.06%)</title><rect x="728.6" y="227.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="731.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="728.6" y="211.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="728.6" y="195.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="731.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="728.6" y="179.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="728.6" y="163.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="728.6" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="731.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.24%)</title><rect x="729.3" y="291.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.06%)</title><rect x="729.3" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.18%)</title><rect x="730.0" y="275.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.0" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.18%)</title><rect x="730.0" y="259.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="732.0" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="732.0" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="732.0" y="259.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="732.0" y="243.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.0" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="732.7" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.7" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="732.7" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.7" y="286.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.94%)</title><rect x="733.4" y="307.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.4" y="318.0"></text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (16 samples, 0.94%)</title><rect x="733.4" y="291.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (16 samples, 0.94%)</title><rect x="733.4" y="275.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="733.4" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="733.4" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="733.4" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="733.4" y="211.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.06%)</title><rect x="733.4" y="195.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.06%)</title><rect x="733.4" y="179.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="733.4" y="163.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.88%)</title><rect x="734.1" y="259.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.88%)</title><rect x="734.1" y="243.0" width="10.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.1" y="254.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.06%)</title><rect x="734.1" y="227.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.06%)</title><rect x="734.1" y="211.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.06%)</title><rect x="734.1" y="195.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.06%)</title><rect x="734.1" y="179.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.06%)</title><rect x="734.1" y="163.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.06%)</title><rect x="734.1" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.1" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.82%)</title><rect x="734.8" y="227.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.8" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (14 samples, 0.82%)</title><rect x="734.8" y="211.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.8" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (14 samples, 0.82%)</title><rect x="734.8" y="195.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.8" y="206.0"></text>
</g>
<g>
<title>read (13 samples, 0.77%)</title><rect x="735.5" y="179.0" width="9.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="738.5" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25603] (637 samples, 37.51%)</title><rect x="744.5" y="371.0" width="442.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="747.5" y="382.0">[NIO Selector #3 tid=25603]</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.18%)</title><rect x="744.5" y="355.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="747.5" y="366.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.12%)</title><rect x="745.2" y="339.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="748.2" y="350.0"></text>
</g>
<g>
<title>_res (2 samples, 0.12%)</title><rect x="745.2" y="323.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="748.2" y="334.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (634 samples, 37.34%)</title><rect x="746.6" y="355.0" width="440.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.6" y="366.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (319 samples, 18.79%)</title><rect x="747.3" y="339.0" width="221.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.3" y="350.0">one/nio/net/JavaSelector.select</text>
</g>
<g>
<title>_res (1 samples, 0.06%)</title><rect x="747.3" y="323.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="750.3" y="334.0"></text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (1 samples, 0.06%)</title><rect x="748.0" y="323.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.06%)</title><rect x="748.0" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.0" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.06%)</title><rect x="748.0" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.0" y="302.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="748.7" y="323.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="751.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (316 samples, 18.61%)</title><rect x="749.4" y="323.0" width="219.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.4" y="334.0">sun/nio/ch/SelectorImpl.select</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (316 samples, 18.61%)</title><rect x="749.4" y="307.0" width="219.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.4" y="318.0">sun/nio/ch/SelectorImpl.lockA..</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (316 samples, 18.61%)</title><rect x="749.4" y="291.0" width="219.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.4" y="302.0">sun/nio/ch/KQueueSelectorImpl..</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (309 samples, 18.20%)</title><rect x="749.4" y="275.0" width="214.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.4" y="286.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>Java_sun_nio_ch_KQueue_poll (2 samples, 0.12%)</title><rect x="757.1" y="259.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="760.1" y="270.0"></text>
</g>
<g>
<title>kevent (296 samples, 17.43%)</title><rect x="758.4" y="259.0" width="205.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="761.4" y="270.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (5 samples, 0.29%)</title><rect x="964.1" y="275.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.1" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="964.8" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.8" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="964.8" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.8" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.18%)</title><rect x="965.5" y="259.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.5" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="965.5" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.5" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="965.5" y="227.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.5" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="965.5" y="211.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (2 samples, 0.12%)</title><rect x="966.2" y="243.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processUpdateQueue (1 samples, 0.06%)</title><rect x="967.6" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.06%)</title><rect x="967.6" y="259.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.06%)</title><rect x="968.3" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="968.3" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="971.3" y="270.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="968.3" y="243.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.3" y="254.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="968.3" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="971.3" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="968.3" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.3" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (314 samples, 18.49%)</title><rect x="969.0" y="339.0" width="218.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.0" y="350.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (314 samples, 18.49%)</title><rect x="969.0" y="323.0" width="218.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="972.0" y="334.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (244 samples, 14.37%)</title><rect x="969.0" y="307.0" width="169.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.0" y="318.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (225 samples, 13.25%)</title><rect x="969.0" y="291.0" width="156.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.0" y="302.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (225 samples, 13.25%)</title><rect x="969.0" y="275.0" width="156.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.0" y="286.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (223 samples, 13.13%)</title><rect x="969.0" y="259.0" width="155.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="972.0" y="270.0">RequestHandler0_stat..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (220 samples, 12.96%)</title><rect x="969.0" y="243.0" width="152.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="972.0" y="254.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (215 samples, 12.66%)</title><rect x="969.0" y="227.0" width="149.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.0" y="238.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 1.30%)</title><rect x="969.0" y="211.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="972.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="971.8" y="195.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="974.8" y="206.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="972.5" y="195.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="975.5" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (15 samples, 0.88%)</title><rect x="973.9" y="195.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.12%)</title><rect x="974.6" y="179.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.6" y="190.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="975.3" y="163.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="978.3" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.18%)</title><rect x="976.0" y="179.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="977.3" y="163.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="977.3" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.53%)</title><rect x="978.0" y="179.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.0" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.53%)</title><rect x="978.0" y="163.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="981.0" y="174.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="983.6" y="147.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="983.6" y="131.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="986.6" y="142.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (193 samples, 11.37%)</title><rect x="984.3" y="211.0" width="134.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.3" y="222.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (193 samples, 11.37%)</title><rect x="984.3" y="195.0" width="134.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.3" y="206.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="984.3" y="179.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="987.3" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (188 samples, 11.07%)</title><rect x="985.0" y="179.0" width="130.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.0" y="190.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (187 samples, 11.01%)</title><rect x="985.7" y="163.0" width="129.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="988.7" y="174.0">one/nio/net/Java..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (187 samples, 11.01%)</title><rect x="985.7" y="147.0" width="129.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.7" y="158.0">sun/nio/ch/Socke..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="985.7" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="985.7" y="115.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="988.7" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (186 samples, 10.95%)</title><rect x="986.4" y="131.0" width="129.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="989.4" y="142.0">sun/nio/ch/IOUti..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (186 samples, 10.95%)</title><rect x="986.4" y="115.0" width="129.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.4" y="126.0">sun/nio/ch/IOUti..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (183 samples, 10.78%)</title><rect x="986.4" y="99.0" width="127.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="989.4" y="110.0">sun/nio/ch/IOUti..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (183 samples, 10.78%)</title><rect x="986.4" y="83.0" width="127.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="989.4" y="94.0">sun/nio/ch/Socke..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (183 samples, 10.78%)</title><rect x="986.4" y="67.0" width="127.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.4" y="78.0">sun/nio/ch/FileD..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (1 samples, 0.06%)</title><rect x="988.5" y="51.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="991.5" y="62.0"></text>
</g>
<g>
<title>write (179 samples, 10.54%)</title><rect x="989.2" y="51.0" width="124.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="992.2" y="62.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.18%)</title><rect x="1113.6" y="99.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1116.6" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.18%)</title><rect x="1113.6" y="83.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1116.6" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.18%)</title><rect x="1113.6" y="67.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1116.6" y="78.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.12%)</title><rect x="1114.3" y="51.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1117.3" y="62.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.24%)</title><rect x="1115.6" y="179.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.6" y="190.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.18%)</title><rect x="1115.6" y="163.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1118.6" y="174.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (3 samples, 0.18%)</title><rect x="1115.6" y="147.0" width="2.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1118.6" y="158.0"></text>
</g>
<g>
<title>_res (1 samples, 0.06%)</title><rect x="1117.0" y="131.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1120.0" y="142.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.06%)</title><rect x="1117.7" y="163.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1120.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.29%)</title><rect x="1118.4" y="227.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1121.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.29%)</title><rect x="1118.4" y="211.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1121.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.29%)</title><rect x="1118.4" y="195.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.4" y="206.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="1119.1" y="179.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.1" y="190.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="1119.1" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1122.1" y="174.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.18%)</title><rect x="1119.8" y="179.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.8" y="190.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.18%)</title><rect x="1119.8" y="163.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.8" y="174.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.12%)</title><rect x="1120.5" y="147.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.5" y="158.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.06%)</title><rect x="1121.2" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.2" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1121.2" y="115.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1124.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.status (3 samples, 0.18%)</title><rect x="1121.9" y="243.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1124.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (3 samples, 0.18%)</title><rect x="1121.9" y="227.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1124.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="1121.9" y="211.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.06%)</title><rect x="1121.9" y="195.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1122.6" y="211.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.06%)</title><rect x="1123.3" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.handleDefault (2 samples, 0.12%)</title><rect x="1124.0" y="259.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1127.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="1124.0" y="243.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.06%)</title><rect x="1124.0" y="227.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.entity (1 samples, 0.06%)</title><rect x="1124.7" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1127.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/seliverstov/ServiceImpl.executeAsync (1 samples, 0.06%)</title><rect x="1124.7" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="1124.7" y="211.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="1124.7" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="1124.7" y="179.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="1124.7" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.06%)</title><rect x="1124.7" y="147.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.47%)</title><rect x="1125.4" y="291.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.18%)</title><rect x="1125.4" y="275.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.4" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.29%)</title><rect x="1127.5" y="275.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1130.5" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.24%)</title><rect x="1128.2" y="259.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.18%)</title><rect x="1130.9" y="291.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.9" y="302.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.12%)</title><rect x="1130.9" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.12%)</title><rect x="1130.9" y="259.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1133.9" y="270.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="1131.6" y="243.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.06%)</title><rect x="1131.6" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.06%)</title><rect x="1132.3" y="275.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1135.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.12%)</title><rect x="1133.0" y="291.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.0" y="302.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="1133.0" y="275.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.12%)</title><rect x="1133.0" y="259.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1136.0" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.35%)</title><rect x="1134.4" y="291.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.4" y="302.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.24%)</title><rect x="1135.8" y="275.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1138.8" y="286.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.06%)</title><rect x="1137.9" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.9" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (70 samples, 4.12%)</title><rect x="1138.6" y="307.0" width="48.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.6" y="318.0">one/..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (70 samples, 4.12%)</title><rect x="1138.6" y="291.0" width="48.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1141.6" y="302.0">one/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="1138.6" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1141.6" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1138.6" y="259.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.6" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1138.6" y="243.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.6" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (68 samples, 4.00%)</title><rect x="1140.0" y="275.0" width="47.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.0" y="286.0">sun/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.12%)</title><rect x="1140.0" y="259.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.12%)</title><rect x="1140.0" y="243.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.12%)</title><rect x="1140.0" y="227.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.12%)</title><rect x="1140.0" y="211.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.06%)</title><rect x="1140.0" y="195.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.06%)</title><rect x="1140.0" y="179.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="1140.0" y="163.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.06%)</title><rect x="1140.7" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="1141.4" y="259.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (65 samples, 3.83%)</title><rect x="1142.0" y="259.0" width="45.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.0" y="270.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (64 samples, 3.77%)</title><rect x="1142.7" y="243.0" width="44.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1145.7" y="254.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (59 samples, 3.47%)</title><rect x="1143.4" y="227.0" width="41.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.4" y="238.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (58 samples, 3.42%)</title><rect x="1144.1" y="211.0" width="40.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.1" y="222.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (58 samples, 3.42%)</title><rect x="1144.1" y="195.0" width="40.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1147.1" y="206.0">sun..</text>
</g>
<g>
<title>read (54 samples, 3.18%)</title><rect x="1146.9" y="179.0" width="37.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1149.9" y="190.0">read</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.12%)</title><rect x="1184.4" y="227.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.12%)</title><rect x="1184.4" y="211.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.4" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (1 samples, 0.06%)</title><rect x="1185.1" y="195.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1188.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.12%)</title><rect x="1185.8" y="227.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1188.8" y="238.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="1185.8" y="211.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.8" y="222.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.12%)</title><rect x="1185.8" y="195.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1188.8" y="206.0"></text>
</g>
<g>
<title>[tid=13059] (1 samples, 0.06%)</title><rect x="1187.2" y="371.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1190.2" y="382.0"></text>
</g>
<g>
<title>thread_start (1 samples, 0.06%)</title><rect x="1187.2" y="355.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1190.2" y="366.0"></text>
</g>
<g>
<title>_pthread_start (1 samples, 0.06%)</title><rect x="1187.2" y="339.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1190.2" y="350.0"></text>
</g>
<g>
<title>_pthread_body (1 samples, 0.06%)</title><rect x="1187.2" y="323.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1190.2" y="334.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.06%)</title><rect x="1187.2" y="307.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1190.2" y="318.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.06%)</title><rect x="1187.2" y="291.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.2" y="302.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.06%)</title><rect x="1187.2" y="275.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.2" y="286.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.06%)</title><rect x="1187.2" y="259.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.2" y="270.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (1 samples, 0.06%)</title><rect x="1187.2" y="243.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.2" y="254.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.06%)</title><rect x="1187.2" y="227.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.2" y="238.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.06%)</title><rect x="1187.2" y="211.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.2" y="222.0"></text>
</g>
<g>
<title>[tid=41475] (3 samples, 0.18%)</title><rect x="1187.9" y="371.0" width="2.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1190.9" y="382.0"></text>
</g>
<g>
<title>thread_start (3 samples, 0.18%)</title><rect x="1187.9" y="355.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1190.9" y="366.0"></text>
</g>
<g>
<title>_pthread_start (3 samples, 0.18%)</title><rect x="1187.9" y="339.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1190.9" y="350.0"></text>
</g>
<g>
<title>_pthread_body (3 samples, 0.18%)</title><rect x="1187.9" y="323.0" width="2.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1190.9" y="334.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.18%)</title><rect x="1187.9" y="307.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1190.9" y="318.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.18%)</title><rect x="1187.9" y="291.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.9" y="302.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.18%)</title><rect x="1187.9" y="275.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.9" y="286.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (3 samples, 0.18%)</title><rect x="1187.9" y="259.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.9" y="270.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.18%)</title><rect x="1187.9" y="243.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.9" y="254.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.18%)</title><rect x="1187.9" y="227.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.9" y="238.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 0.18%)</title><rect x="1187.9" y="211.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.9" y="222.0"></text>
</g>
<g>
<title>__psynch_cvwait (3 samples, 0.18%)</title><rect x="1187.9" y="195.0" width="2.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1190.9" y="206.0"></text>
</g>
</g>
</svg>
